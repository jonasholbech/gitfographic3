{"version":3,"sources":["machine/MachineProvider.js","machine/scenes/topBranchTransitions.js","machine/scenes/introductionScene.js","machine/scenes/overviewScene.js","machine/scenes/gitignoreScene.js","machine/scenes/commitScene.js","machine/scenes/branchScene.js","machine/scenes/resetCheckoutScene.js","machine/scenes/workingAloneScene.js","machine/scenes/githubScene.js","machine/parts/guards.js","machine/parts/actions.js","machine/config.js","machine/stateMachine.js","machine/descriptions.js","components/Levels.js","components/Nav.js","components/svg/Defs.js","components/svg/Description.js","components/svg/TypewriterDescription.js","hooks/useInterval.js","components/svg/GitLogo.js","components/svg/scenes/Introduction.js","components/svg/SVG.js","components/DarkModeSwitch.js","App.js","serviceWorker.js","index.js"],"names":["MachineContext","React","createContext","MachineProvider","machineInstance","children","Provider","value","topBranchTransitions","introductionScene","overviewScene","gitignoreScene","commitScene","branchScene","resetCheckoutScene","workingAloneScene","githubScene","id","initial","on","states","whatIsThis","next","navigation","prev","whatIsGit","whyGit","metaphoresUsed","isItHard","target","cond","type","scene","actions","msg","send","delay","entry","x","y","first","drawLocalBox","drawRemoteBox","workingArea","stagingArea","localRepository","remoteRepository","addCommand","addCommandMoveFile1","addCommandMoveFile2and3","addCommandMoveFile3Back","commitCommand","resetCommand","pushCommand","pullCommand","takeAScreenshot","opening","always","gitIgnoreSceneSet","gitIgnoreSceneSet2","gitIgnoreFile","exit","gitIgnoreFileMovedBack","beforeCommits","commits1","commits2","commits3","commits4","commits5","commits6","commits7","master","branchToFeature1","feature1","feature1MergeToMaster","branchToFeature2Cards","feature2Cards","feature2MergeToMaster","branchToNav","developmentComplete","spreadOut","filesAddedToProject","firstAddCommand","firstCommitCommand","firstChangeToFiles","secondAddCommand","secondCommitCommand","resetIntro","reset","restored","checkout","ending","countLoop","meta","texts","prop","github","pushing","pulling","cloning","guards","hasUnlocked","context","event","unlocks","greaterThanZero","ctx","evt","console","log","hasMoreTexts","workingAloneCount","fireworks","action","fireOff","count","i","fx","window","innerWidth","Math","random","innerHeight","setTimeout","document","body","dataset","h1","createElement","textContent","style","position","textAlign","top","appendChild","remove","toggleTypewriter","assign","description","typewriter","setBox","setCountEnd","commitListStep","countUp","countDown","resetCount","resetBranchOverlay","branchOverlayStep","setBranchOverlayEnd","incrementBranchOverlay","decrementBranchOverlay","setBranchOverlay","setCssFileStep","cssFileStep","resetWorkingAloneCount","incrementWorkingAloneCount","decrementWorkingAloneCount","unlockScene","storage","JSON","parse","localStorage","getItem","setItem","stringify","scenes","initialUnlocks","Object","keys","map","key","index","machine","strict","htmlFileStep","flowMachine","Machine","descriptions","name","desc","Levels","setLevelsOpen","useContext","state","className","disabled","onClick","Nav","props","useState","levelsOpen","useEffect","handleKeyUp","e","handleKeyDown","preventDefault","addEventListener","removeEventListener","toStrings","classes","size","nextEvents","includes","Defs","markerWidth","markerHeight","refX","refY","orient","points","Description","text","spring","useSpring","from","transform","to","config","duration","g","split","t","dy","TypewriterDescription","startDelay","doneCallback","setCount","currentText","setCurrentText","delayCompleted","setDelayCompleted","callback","savedCallback","useRef","current","setInterval","clearInterval","useInterval","slice","length","GitLogo","d","Introduction","Overview","lazy","Gitignore","CommitsExplained","Branches","ResetCheckoutScene","WorkingAlone","Github","SVG","machineState","parent","child","substate","parentstate","viewBox","xmlns","matches","fallback","DarkMode","darkMode","setDarkMode","checked","onChange","classList","add","App","useMachine","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+GAAA,wFACMA,EAAiBC,IAAMC,gBAEvBC,EAAkB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,SAC1C,OACE,kBAACL,EAAeM,SAAhB,CAAyBC,MAAOH,GAC7BC,K,mPCIQG,EAVc,CAC3BC,kBAAmB,oBACnBC,cAAe,gBACfC,eAAgB,iBAChBC,YAAa,cACbC,YAAa,cACbC,mBAAoB,qBACpBC,kBAAmB,oBACnBC,YAAa,eCiDAP,EAvDW,CACxBQ,GAAI,oBACJC,QAAS,aACTC,GAAIX,EACJY,OAAQ,CACNC,WAAY,CACVF,GAAI,CACFG,KAAM,eAGVC,WAAY,CACVJ,GAAI,CACFG,KAAM,YACNE,KAAM,eAGVC,UAAW,CACTN,GAAI,CACFG,KAAM,SACNE,KAAM,eAGVE,OAAQ,CACNP,GAAI,CACFG,KAAM,iBACNE,KAAM,eAGVG,eAAgB,CACdR,GAAI,CACFG,KAAM,WACNE,KAAM,WAGVI,SAAU,CACRT,GAAI,CACFG,KAAM,CACJ,CACEO,OAAQ,iBACRC,KAAM,CAAEC,KAAM,cAAeC,MAAO,kBAEtC,CACEC,QAAS,CACP,CAAEF,KAAM,YAAaG,IAAK,gBAC1B,CAAEH,KAAM,cAAeC,MAAO,iBAC9BG,YAAK,gBAAiB,CAAEC,MAAO,SAIrCZ,KAAM,aCkFCd,EAlIO,CACpB2B,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCtB,GAAI,gBACJC,QAAS,QACTC,GAAIX,EACJY,OAAQ,CACNoB,MAAO,CACLrB,GAAI,CACFG,KAAM,eACNE,KAAM,gCAGViB,aAAc,CACZJ,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,gBACNE,KAAM,UAGVkB,cAAe,CACbL,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,cACNE,KAAM,iBAIVmB,YAAa,CACXN,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,cACNE,KAAM,kBAGVoB,YAAa,CACXP,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,kBACNE,KAAM,gBAGVqB,gBAAiB,CACfR,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,mBACNE,KAAM,gBAGVsB,iBAAkB,CAChBT,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,aACNE,KAAM,oBAGVuB,WAAY,CACVV,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,sBACNE,KAAM,qBAGVwB,oBAAqB,CACnB7B,GAAI,CACFG,KAAM,0BACNE,KAAM,eAIVyB,wBAAyB,CACvB9B,GAAI,CACFG,KAAM,0BACNE,KAAM,wBAGV0B,wBAAyB,CACvB/B,GAAI,CACFG,KAAM,gBACNE,KAAM,4BAGV2B,cAAe,CACbd,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,eACNE,KAAM,4BAGV4B,aAAc,CACZf,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,cACNE,KAAM,kBAGV6B,YAAa,CACXhB,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,cACNE,KAAM,kBAGV8B,YAAa,CACXjB,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,kBACNE,KAAM,gBAGV+B,gBAAiB,CACflB,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,CACJ,CACEO,OAAQ,kBACRC,KAAM,CAAEC,KAAM,cAAeC,MAAO,mBAEtC,CACEC,QAAS,CACP,CAAEF,KAAM,YAAaG,IAAK,YAC1B,CAAEH,KAAM,cAAeC,MAAO,kBAC9BG,YAAK,iBAAkB,CAAEC,MAAO,SAItCZ,KAAM,kBC1ECb,EApDQ,CACrBO,QAAS,UACTD,GAAI,iBACJE,GAAIX,EACJY,OAAQ,CACNoC,QAAS,CACPC,OAAQ,qBAEVC,kBAAmB,CACjBrB,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,GACpCpB,GAAI,CACFG,KAAM,qBACNE,KAAM,+BAGVmC,mBAAoB,CAClBtB,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,GACpCpB,GAAI,CACFG,KAAM,gBACNE,KAAM,sBAGVoC,cAAe,CACbvB,MAAO,CAAC,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,IAAM,oBAC3CpB,GAAI,CACFG,KAAM,yBACNE,KAAM,sBAERqC,KAAM,oBAERC,uBAAwB,CACtBzB,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,GACpCpB,GAAI,CACFG,KAAM,CACJ,CACEO,OAAQ,eACRC,KAAM,CAAEC,KAAM,cAAeC,MAAO,gBAEtC,CACEC,QAAS,CACP,CAAEF,KAAM,YAAaG,IAAK,cAC1B,CAAEH,KAAM,cAAeC,MAAO,eAC9BG,YAAK,cAAe,CAAEC,MAAO,SAKnCZ,KAAM,oBC4ECZ,EA1HK,CAElBK,GAAI,cACJC,QAAS,UACTC,GAAIX,EACJY,OAAQ,CACNoC,QAAS,CACPnB,MAAO,CAAC,cACRoB,OAAQ,iBAEVM,cAAe,CACb1B,MAAO,CAAEN,KAAM,SAAUO,EAAG,GAAIC,EAAG,KACnCpB,GAAI,CACFG,KAAM,CACJO,OAAQ,WACRI,QAAS,WAEXT,KAAM,CACJK,OAAQ,yCACRI,QAAS,eAIf+B,SAAU,CACR3B,MAAO,CAAEN,KAAM,SAAUO,EAAG,GAAIC,EAAG,KACnCpB,GAAI,CACFG,KAAM,CACJO,OAAQ,WACRI,QAAS,WAEXT,KAAM,CACJK,OAAQ,gBACRI,QAAS,eAIfgC,SAAU,CACR9C,GAAI,CACFG,KAAM,CACJO,OAAQ,WACRI,QAAS,WAEXT,KAAM,CACJK,OAAQ,WACRI,QAAS,eAIfiC,SAAU,CACR/C,GAAI,CACFG,KAAM,CACJO,OAAQ,WACRI,QAAS,WAEXT,KAAM,CACJK,OAAQ,WACRI,QAAS,eAIfkC,SAAU,CACRhD,GAAI,CACFG,KAAM,CACJO,OAAQ,WACRI,QAAS,WAEXT,KAAM,CACJK,OAAQ,WACRI,QAAS,eAIfmC,SAAU,CACR/B,MAAO,CAAEN,KAAM,SAAUO,EAAG,GAAIC,EAAG,KACnCpB,GAAI,CACFG,KAAM,CACJO,OAAQ,WACRI,QAAS,WAEXT,KAAM,CACJK,OAAQ,WACRI,QAAS,eAIfoC,SAAU,CACRhC,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,CACJO,OAAQ,WACRI,QAAS,WAEXT,KAAM,CACJK,OAAQ,WACRI,QAAS,eAIfqC,SAAU,CACRnD,GAAI,CACFG,KAAM,CACJ,CACEO,OAAQ,eACRC,KAAM,CAAEC,KAAM,cAAeC,MAAO,gBAEtC,CACEC,QAAS,CACP,CAAEF,KAAM,YAAaG,IAAK,WAC1B,CAAEH,KAAM,cAAeC,MAAO,eAC9BG,YAAK,cAAe,CAAEC,MAAO,SAKnCZ,KAAM,CACJK,OAAQ,WACRI,QAAS,iBCUJpB,EA/HK,CAClBI,GAAI,cACJC,QAAS,UACTC,GAAIX,EACJY,OAAQ,CACNoC,QAAS,CACPnB,MAAO,CAAC,qBAAsB,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,MAC3DpB,GAAI,CACFG,KAAM,CAAEO,OAAQ,SAAUI,QAAS,0BACnCT,KAAM,CAAEK,OAAQ,wBAAyBI,QAAS,iBAGtDsC,OAAQ,CACNlC,MAAO,CAAC,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,MACrCpB,GAAI,CACFG,KAAM,CACJO,OAAQ,mBACRI,QAAS,0BAEXT,KAAM,CAAEK,OAAQ,UAAWI,QAAS,4BAGxCuC,iBAAkB,CAChBnC,MAAO,CAAC,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,MACrCpB,GAAI,CACFG,KAAM,CAAEO,OAAQ,WAAYI,QAAS,0BACrCT,KAAM,CAAEK,OAAQ,SAAUI,QAAS,4BAGvCwC,SAAU,CACRpC,MAAO,CAAC,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,MACrCpB,GAAI,CACFG,KAAM,CACJO,OAAQ,wBACRI,QAAS,0BAEXT,KAAM,CACJK,OAAQ,mBACRI,QAAS,4BAIfyC,sBAAuB,CACrBrC,MAAO,CAAC,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,MACrCpB,GAAI,CACFG,KAAM,CACJO,OAAQ,wBACRI,QAAS,0BAEXT,KAAM,CACJK,OAAQ,WACRI,QAAS,4BAIf0C,sBAAuB,CACrBxD,GAAI,CACFG,KAAM,CACJO,OAAQ,gBACRI,QAAS,0BAEXT,KAAM,CACJK,OAAQ,wBACRI,QAAS,4BAIf2C,cAAe,CACbzD,GAAI,CACFG,KAAM,CACJO,OAAQ,wBACRI,QAAS,0BAEXT,KAAM,CACJK,OAAQ,wBACRI,QAAS,4BAIf4C,sBAAuB,CACrB1D,GAAI,CACFG,KAAM,CACJO,OAAQ,cACRI,QAAS,0BAEXT,KAAM,CACJK,OAAQ,gBACRI,QAAS,4BAIf6C,YAAa,CACX3D,GAAI,CACFG,KAAM,CACJO,OAAQ,sBACRI,QAAS,0BAEXT,KAAM,CACJK,OAAQ,wBACRI,QAAS,4BAIf8C,oBAAqB,CAEnB5D,GAAI,CACFG,KAAM,CACJ,CACEO,OAAQ,sBACRC,KAAM,CAAEC,KAAM,cAAeC,MAAO,uBAEtC,CACEC,QAAS,CACP,CAAEF,KAAM,YAAaG,IAAK,YAC1B,CAAEH,KAAM,cAAeC,MAAO,sBAC9BG,YAAK,qBAAsB,CAAEC,MAAO,SAI1CZ,KAAM,CACJK,OAAQ,cACRI,QAAS,8BCbJnB,EA5GY,CACzBG,GAAI,qBACJC,QAAS,UACTC,GAAIX,EACJY,OAAQ,CACNoC,QAAS,CACPnB,MAAO,CAAC,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,MACrCpB,GAAI,CACFG,KAAM,YACNE,KAAM,CACJK,OAAQ,mCACRI,QAAS,CAAC,0BAIhB+C,UAAW,CACT3C,MAAO,CAAC,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,MACrCpB,GAAI,CACFG,KAAM,sBACNE,KAAM,YAGVyD,oBAAqB,CACnB5C,MAAO,CAAC,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,MACrCpB,GAAI,CACFG,KAAM,kBACNE,KAAM,cAGV0D,gBAAiB,CACf7C,MAAO,CAAC,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,MACrCpB,GAAI,CAAEG,KAAM,qBAAsBE,KAAM,wBAE1C2D,mBAAoB,CAClB9C,MAAO,CACL,CAAEN,KAAM,iBAAkBxB,MAAO,GACjC,CAAEwB,KAAM,SAAUO,EAAG,IAAKC,EAAG,MAE/BpB,GAAI,CAAEG,KAAM,qBAAsBE,KAAM,oBAE1C4D,mBAAoB,CAClB/C,MAAO,CACL,CAAEN,KAAM,iBAAkBxB,MAAO,GACjC,CAAEwB,KAAM,SAAUO,EAAG,IAAKC,EAAG,MAE/BpB,GAAI,CACFG,KAAM,mBACNE,KAAM,uBAGV6D,iBAAkB,CAChBhD,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,sBACNE,KAAM,uBAGV8D,oBAAqB,CACnBjD,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CACFG,KAAM,aACNE,KAAM,qBAGV+D,WAAY,CACVlD,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KACpCpB,GAAI,CAAEG,KAAM,QAASE,KAAM,wBAE7BgE,MAAO,CACLnD,MAAO,CAAEN,KAAM,iBAAkBxB,MAAO,GACxCY,GAAI,CAAEG,KAAM,WAAYE,KAAM,eAEhCiE,SAAU,CACRpD,MAAO,CAAEN,KAAM,iBAAkBxB,MAAO,GACxCY,GAAI,CACFG,KAAM,WACNE,KAAM,UAGVkE,SAAU,CACRrD,MAAO,CAAEN,KAAM,iBAAkBxB,MAAO,GACxCY,GAAI,CACFG,KAAM,SACNE,KAAM,aAGVmE,OAAQ,CACNxE,GAAI,CACFG,KAAM,CACJ,CACEO,OAAQ,qBACRC,KAAM,CAAEC,KAAM,cAAeC,MAAO,sBAEtC,CACEC,QAAS,CACP,CAAEF,KAAM,YAAaG,IAAK,kBAC1B,CAAEH,KAAM,cAAeC,MAAO,qBAC9BG,YAAK,oBAAqB,CAAEC,MAAO,SAIzCZ,KAAM,CACJK,OAAQ,gBC/BHd,EAvEW,CACxBE,GAAI,oBACJC,QAAS,UACTC,GAAIX,EACJY,OAAQ,CACNoC,QAAS,CACPnB,MAAO,CAAC,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,KAAO,0BAC5CpB,GAAI,CACFG,KAAM,CAAEO,OAAQ,YAAaI,QAAS,8BACtCT,KAAM,CACJK,OAAQ,6BACRI,QAAS,CAAC,0BAIhB2D,UAAW,CACTvD,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,IACpCsD,KAAM,CACJC,MAAO,CACL,mCACA,4BACA,+BACA,mCACA,wBACA,sCACA,oCACA,8CACA,yBACA,uBAGJ3E,GAAI,CACFG,KAAM,CACJ,CACEO,OAAQ,YACRI,QAAS,6BACTH,KAAM,gBAER,CAAED,OAAQ,WAEZL,KAAM,CACJ,CACEK,OAAQ,YACRI,QAAS,6BACTH,KAAM,CAAEC,KAAM,kBAAmBgE,KAAM,sBAEzC,CAAElE,OAAQ,cAIhB8D,OAAQ,CACNtD,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,IACpCpB,GAAI,CACFG,KAAM,CACJ,CACEO,OAAQ,eACRC,KAAM,CAAEC,KAAM,cAAeC,MAAO,gBAEtC,CACEC,QAAS,CACP,CAAEF,KAAM,YAAaG,IAAK,iBAC1B,CAAEH,KAAM,cAAeC,MAAO,eAC9BG,YAAK,cAAe,CAAEC,MAAO,SAInCZ,KAAM,gBCNCR,EA5DK,CAClBC,GAAI,cACJC,QAAS,UACTC,GAAIX,EACJY,OAAQ,CACNoC,QAAS,CACPnB,MAAO,CAAC,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,MACrCpB,GAAI,CACFG,KAAM,CAAEO,OAAQ,UAChBL,KAAM,CACJK,OAAQ,4BACRI,QAAS,MAIf+D,OAAQ,CACN7E,GAAI,CACFG,KAAM,UACNE,KAAM,YAGVyE,QAAS,CACP9E,GAAI,CACFG,KAAM,UACNE,KAAM,WAGV0E,QAAS,CACP/E,GAAI,CACFG,KAAM,UACNE,KAAM,YAGV2E,QAAS,CACPhF,GAAI,CACFG,KAAM,GACNE,KAAM,YAGVmE,OAAQ,CACNtD,MAAO,CAAEN,KAAM,SAAUO,EAAG,IAAKC,EAAG,IACpCpB,GAAI,CACFG,KAAM,CACJ,CACEO,OAAQ,GACRC,KAAM,CAAEC,KAAM,cAAeC,MAAO,sBAEtC,CACEC,QAAS,CACP,CAAEF,KAAM,YAAaG,IAAK,iBAC1B,CAAEH,KAAM,cAAeC,MAAO,IAC9BG,YAAK,GAAI,CAAEC,MAAO,SAIxBZ,KAAM,OC5CC4E,EAbA,CACbC,YAAa,SAACC,EAASC,EAAV,GAA+B,IAAZzE,EAAW,EAAXA,KAC9B,OAAOwE,EAAQE,QAAQ1E,EAAKE,QAE9ByE,gBAAiB,SAACC,EAAKC,EAAN,GAAyB,IAAZ7E,EAAW,EAAXA,KAE5B,OADA8E,QAAQC,IAAIH,EAAI5E,EAAKiE,OACdW,EAAI5E,EAAKiE,MAAQ,GAE1Be,aAAc,SAACJ,EAAKC,GAClB,OAAOD,EAAIK,kBAAoB,I,iBC4GpB9E,EAlHC,CACd+E,UAAW,SAACN,EAAKC,EAAN,GAA2B,IAAdM,EAAa,EAAbA,OACtB,SAASC,IACP,IAD2B,IAAZC,EAAW,uDAAH,EACdC,EAAI,EAAGA,EAAID,EAAOC,IACzBC,IAAG,CACD/E,EAAGgF,OAAOC,WAAa,EAAoB,IAAhBC,KAAKC,SAAiB,IACjDlF,EAAG+E,OAAOI,YAAc,EAAoB,IAAhBF,KAAKC,SAAiB,MAIxDP,IACAS,WAAWT,EAAS,KACpBS,WAAWT,EAAS,KACpBU,SAASC,KAAKC,QAAQd,UAAY,OAClC,IAAMe,EAAKH,SAASI,cAAc,MAClCD,EAAGE,YAAH,gDAA0DhB,EAAO/E,IAAjE,UACA6F,EAAGG,MAAMC,SAAW,WACpBJ,EAAGG,MAAME,UAAY,SACrBL,EAAGG,MAAMG,IAAM,OACfT,SAASC,KAAKS,YAAYP,GAC1BJ,YAAW,WACTI,EAAGQ,SACHX,SAASC,KAAKC,QAAQd,UAAY,UACjC,MAELwB,iBAAkBC,YAAO,CACvBC,YAAa,SAAChC,EAAKC,GACjB,IAAM+B,EAAW,eAAQhC,EAAIgC,aAE7B,OADAA,EAAYC,YAAcD,EAAYC,WAC/BD,KAGXE,OAAQH,YAAO,CACbC,YAAa,SAAChC,EAAKC,EAAN,GAA2B,IAAdM,EAAa,EAAbA,OAClByB,EAAW,eAAQhC,EAAIgC,aAG7B,OAFAA,EAAYpG,EAAI2E,EAAO3E,EACvBoG,EAAYnG,EAAI0E,EAAO1E,EAChBmG,KAGXG,YAAaJ,YAAO,CAClBK,eAAgB,SAACpC,EAAKC,GACpB,OAAO,KAGXoC,QAASN,YAAO,CACdK,eAAgB,SAACpC,EAAKC,GACpB,OAAOD,EAAIoC,eAAiB,KAGhCE,UAAWP,YAAO,CAChBK,eAAgB,SAACpC,EAAKC,GACpB,OAAOD,EAAIoC,eAAiB,KAGhCG,WAAYR,YAAO,CACjBK,eAAgB,SAACpC,EAAKC,GACpB,OAAQ,KAGZuC,mBAAoBT,YAAO,CACzBU,kBAAmB,SAACzC,EAAKC,GACvB,OAAO,KAGXyC,oBAAqBX,YAAO,CAC1BU,kBAAmB,SAACzC,EAAKC,GACvB,OAAO,KAGX0C,uBAAwBZ,YAAO,CAC7BU,kBAAmB,SAACzC,EAAKC,GACvB,OAAOD,EAAIyC,kBAAoB,KAGnCG,uBAAwBb,YAAO,CAC7BU,kBAAmB,SAACzC,EAAKC,GACvB,OAAOD,EAAIyC,kBAAoB,KAGnCI,iBAAkBd,YAAO,CACvBU,kBAAmB,SAACzC,EAAKC,EAAN,GACjB,OAD2C,EAAbM,OAChB3E,KAGlBkH,eAAgBf,YAAO,CACrBgB,YAAa,SAAC/C,EAAKC,EAAN,YAAaM,OAAoB1G,SAEhDmJ,uBAAwBjB,YAAO,CAC7B1B,kBAAmB,SAACL,EAAKC,GACvB,OAAQ,KAGZgD,2BAA4BlB,YAAO,CACjC1B,kBAAmB,SAACL,EAAKC,GACvB,OAAOD,EAAIK,kBAAoB,KAGnC6C,2BAA4BnB,YAAO,CACjC1B,kBAAmB,SAACL,EAAKC,GACvB,OAAOD,EAAIK,kBAAoB,KAGnC8C,YAAapB,YAAO,CAClBjC,QAAS,SAACE,EAAKC,EAAN,GAA2B,IAAdM,EAAa,EAAbA,OACdT,EAAO,eAAQE,EAAIF,SACzBA,EAAQS,EAAOjF,QAAS,EACxB,IAAI8H,EAAUC,KAAKC,MAAMC,aAAaC,QC7Gf,cDgHvB,OAFAJ,EAAQ7C,EAAOjF,QAAS,EACxBiI,aAAaE,QC/GU,YD+GaJ,KAAKK,UAAUN,IAC5CtD,MEhGP6D,EAAS,CACb5J,oBACAC,gBACAC,iBACAC,cACAC,cACAC,qBACAC,oBACAC,eAEIsJ,EAAc,eAAQD,GAExBP,EAAUC,KAAKC,MAAMC,aAAaC,QD5BT,cC8B7BK,OAAOC,KAAKF,GAAgBG,KAAI,SAAUC,EAAKC,GAAQ,IAAD,EAEpD,OADAL,EAAeI,IAAc,QAAP,EAAAZ,SAAA,eAAUY,MAAQ,EACjC,MAETJ,EAAe7J,mBAAoB,EAMnCwJ,aAAaE,QDxCgB,YC0C3BJ,KAAKK,UAAL,eACKE,KAKPR,EAAUC,KAAKC,MAAMC,aAAaC,QDhDL,cCiD7B,IAAMU,EAAU,CACd3J,GAAI,aACJ4J,QAAQ,EACR3J,QDrD0B,oBCsD1BoF,QAAS,CACPoC,YAAa,CACXpG,EAAG,IACHC,EAAG,IACHoG,YAAY,GAEdnC,QAAQ,eACH8D,GAELxB,gBAAiB,EACjBK,kBAAmB,EACnBM,YAAa,EACbqB,aAAc,EACd/D,mBAAoB,GAEtB3F,OAAO,eACFiJ,IAQQU,EALKC,YAAQJ,EAAS,CACnCxE,SACAnE,Y,gCCoXagJ,EA9bM,CACnB/J,QFF0B,oBEG1BE,OAAQ,CACNX,kBAAmB,CACjByK,KAAM,eACN7J,WAAY,CACV8J,KAAK,sdAcP5J,WAAY,CACV4J,KAAK,yZAYP1J,UAAW,CACT0J,KAAK,yPAUPzJ,OAAQ,CACNyJ,KAAK,osBAePxJ,eAAgB,CACdwJ,KAAK,oSAMPvJ,SAAU,CACRuJ,KAAK,ieAkBTzK,cAAe,CACbwK,KAAM,WACN1I,MAAO,CACL2I,KAAK,yEAGP1I,aAAc,CACZ0I,KAAK,6BAEPzI,cAAe,CACbyI,KAAK,8CAGPxI,YAAa,CACXwI,KAAK,wFAGPvI,YAAa,CACXuI,KAAK,mOAMPtI,gBAAiB,CACfsI,KAAK,oNAOPrI,iBAAkB,CAChBqI,KAAK,+IAKPpI,WAAY,CACVoI,KAAK,yDAEPnI,oBAAqB,CACnBmI,KAAK,iCAEPlI,wBAAyB,CACvBkI,KAAK,eAEPjI,wBAAyB,CACvBiI,KAAK,sFAGPhI,cAAe,CACbgI,KAAK,oOAMP/H,aAAc,CACZ+H,KAAK,6IAIP9H,YAAa,CACX8H,KAAK,8OAQP7H,YAAa,CACX6H,KAAK,+IAIP5H,gBAAiB,CACf4H,KAAK,oEAGTxK,eAAgB,CACduK,KAAM,aACNxH,kBAAmB,CACjByH,KAAK,mOAOPxH,mBAAoB,CAClBwH,KAAK,oVAMPvH,cAAe,CACbuH,KAAK,+SAaPrH,uBAAwB,CACtBqH,KAAK,iLAMTvK,YAAa,CACXsK,KAAM,UACNnH,cAAe,CACboH,KAAK,4FAGPnH,SAAU,CACRmH,KAAK,iGAGPlH,SAAU,CACRkH,KAAK,8DAEPjH,SAAU,CACRiH,KAAK,mDAEPhH,SAAU,CACRgH,KAAK,kCAEP/G,SAAU,CACR+G,KAAK,iHAIP9G,SAAU,CACR8G,KAAK,oRAOP7G,SAAU,CACR6G,KAAK,sEAGTtK,YAAa,CACXqK,KAAM,WACN1H,QAAS,CACP2H,KAAK,+VASP5G,OAAQ,CACN4G,KAAK,gJAKP3G,iBAAkB,CAChB2G,KAAK,8KAKP1G,SAAU,CACR0G,KAAK,0GAIPzG,sBAAuB,CACrByG,KAAK,yKAKPxG,sBAAuB,CACrBwG,KAAK,+EAGPvG,cAAe,CACbuG,KAAK,kNAQPtG,sBAAuB,CACrBsG,KAAK,mIAIPrG,YAAa,CACXqG,KAAK,mHAIPpG,oBAAqB,CACnBoG,KAAK,0LAOTrK,mBAAoB,CAClBoK,KAAM,mBACN1H,QAAS,CACP2H,KAAK,4HAIPnG,UAAW,CACTmG,KAAK,0FAIPlG,oBAAqB,CACnBkG,KAAK,oEAEPjG,gBAAiB,CACfiG,KAAK,qHAIPhG,mBAAoB,CAClBgG,KAAK,uFAIP/F,mBAAoB,CAClB+F,KAAK,4GAIP9F,iBAAkB,CAChB8F,KAAK,0CAEP7F,oBAAqB,CACnB6F,KAAK,iLAOP5F,WAAY,CACV4F,KAAK,+MAKP3F,MAAO,CACL2F,KAAK,6XAUP1F,SAAU,CACR0F,KAAK,8TAQPzF,SAAU,CACRyF,KAAK,yJAIPxF,OAAQ,CACNwF,KAAK,uOAMTpK,kBAAmB,CACjBmK,KAAM,gBACN1H,QAAS,CACP2H,KAAK,yEAEPvF,UAAW,CACTuF,KAAK,iCAEPxF,OAAQ,CACNwF,KAAK,mSASTnK,YAAa,CACXkK,KAAM,SACN1H,QAAS,CACP2H,KAAK,kNAMPnF,OAAQ,CACNmF,KAAK,gOAQPlF,QAAS,CACPkF,KAAK,sFAIPjF,QAAS,CACPiF,KAAK,sEAIPhF,QAAS,CACPgF,KAAK,gWC9aE,SAASC,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAC1BC,qBAAWtL,KADe,mBACzCuL,EADyC,KAClCpJ,EADkC,KAGhD,OACE,wBAAIqJ,UAAU,UACZ,4BACE,4BACEC,UAAWF,EAAMjF,QAAQE,QAAQ/F,kBACjCiL,QAAS,WACPL,GAAc,GACdlJ,EAAK,uBAGNoJ,EAAMjF,QAAQE,QAAQ/F,kBAAoB,eAAiB,WAGhE,4BACE,4BACEgL,UAAWF,EAAMjF,QAAQE,QAAQ9F,cACjCgL,QAAS,WACPL,GAAc,GACdlJ,EAAK,mBAGNoJ,EAAMjF,QAAQE,QAAQ9F,cAAgB,WAAa,WAGxD,4BACE,4BACE+K,UAAWF,EAAMjF,QAAQE,QAAQ7F,eACjC+K,QAAS,WACPL,GAAc,GACdlJ,EAAK,oBAGNoJ,EAAMjF,QAAQE,QAAQ7F,eAAiB,aAAe,WAG3D,4BACE,4BACE8K,UAAWF,EAAMjF,QAAQE,QAAQ5F,YACjC8K,QAAS,WACPL,GAAc,GACdlJ,EAAK,iBAGNoJ,EAAMjF,QAAQE,QAAQ5F,YAAc,UAAY,WAGrD,4BACE,4BACE6K,UAAWF,EAAMjF,QAAQE,QAAQ3F,YACjC6K,QAAS,WACPL,GAAc,GACdlJ,EAAK,iBAGNoJ,EAAMjF,QAAQE,QAAQ3F,YAAc,WAAa,WAGtD,4BACE,4BACE4K,UAAWF,EAAMjF,QAAQE,QAAQ1F,mBACjC4K,QAAS,WACPL,GAAc,GACdlJ,EAAK,wBAGNoJ,EAAMjF,QAAQE,QAAQ1F,mBACnB,mBACA,WAGR,4BACE,4BACE2K,UAAWF,EAAMjF,QAAQE,QAAQzF,kBACjC2K,QAAS,WACPL,GAAc,GACdlJ,EAAK,uBAGNoJ,EAAMjF,QAAQE,QAAQzF,kBAAoB,gBAAkB,WAGjE,4BACE,4BACE0K,UAAWF,EAAMjF,QAAQE,QAAQxF,YACjC0K,QAAS,WACPL,GAAc,GACdlJ,EAAK,iBAGNoJ,EAAMjF,QAAQE,QAAQxF,YAAc,SAAW,WAGpD,wBAAIwK,UAAU,SACZ,4BAAQE,QAAS,kBAAML,GAAc,KAArC,OCzFO,SAASM,EAAIC,GAAQ,IAAD,EACXN,qBAAWtL,KADA,mBAC1BuL,EAD0B,KACnBpJ,EADmB,OAEG0J,oBAAS,GAFZ,mBAE1BC,EAF0B,KAEdT,EAFc,KAIjCU,qBAAU,WACR,SAASC,EAAYC,GAEhBrE,SAASC,KAAKC,QAAQd,WACa,UAApCY,SAASC,KAAKC,QAAQd,YAER,MAAViF,EAAEvB,KAAyB,eAAVuB,EAAEvB,IACrBvI,EAAK,QACc,cAAV8J,EAAEvB,IACXvI,EAAK,QACc,YAAV8J,EAAEvB,IACXW,GAAc,GACK,cAAVY,EAAEvB,KACXW,GAAc,IAIpB,SAASa,EAAcD,IACP,MAAVA,EAAEvB,KAEe,cAAVuB,EAAEvB,KAAuBoB,IADlCG,EAAEE,iBAON,OAFA7E,OAAO8E,iBAAiB,QAASJ,GACjC1E,OAAO8E,iBAAiB,UAAWF,GAC5B,WACL5E,OAAO+E,oBAAoB,QAASL,GACpC1E,OAAO+E,oBAAoB,UAAWH,OAG1C,IAAMlK,EAAQiJ,EAAa7J,OAAOmK,EAAMe,YAAY,IAAIpB,KAElDqB,GAAWT,EAAa,OAAS,IAAM,cAC7C,OACE,yBAAKN,UAAWe,GACd,kBAACnB,EAAD,CAAQC,cAAeA,IACvB,6BACE,4BAAKrJ,GAEL,4BAAQ0J,QAAS,kBAAML,GAAeS,KACpC,kBAAC,IAAD,CAAeN,UAAU,KAAKgB,KAAM,MAEtC,4BACEf,UAAWF,EAAMkB,WAAWC,SAAS,QACrChB,QAAS,kBAAMvJ,EAAK,UAEpB,kBAAC,IAAD,CAAiBqJ,UAAU,OAAOgB,KAAM,MAE1C,4BACEf,UAAWF,EAAMkB,WAAWC,SAAS,QACrChB,QAAS,kBAAMvJ,EAAK,UAEpB,kBAAC,IAAD,CAAkBqJ,UAAU,OAAOgB,KAAM,QClEpC,SAASG,IACtB,OACE,8BACE,4BACE1L,GAAG,YACH2L,YAAY,KACZC,aAAa,IACbC,KAAK,IACLC,KAAK,MACLC,OAAO,QAEP,6BAASC,OAAO,uB,YCTT,SAASC,EAAT,GAAsC,IAAf5K,EAAc,EAAdA,EAAGC,EAAW,EAAXA,EAAG4K,EAAQ,EAARA,KACpCC,EAASC,oBAAU,CACvBC,KAAM,CACJC,UAAU,2BAEZC,GAAI,CACFD,UAAU,aAAD,OAAejL,EAAf,eAAuBC,EAAvB,QAEXkL,OAAQ,CACNC,SAAU,OAId,OAAKP,EAOH,kBAAC,WAASQ,EAAV,CAAY1M,GAAG,cAAciH,MAAOkF,GAClC,0BAAM9K,EAAG,EAAGC,EAAG,GACZ4K,EAAKS,MAAM,MAAMnD,KAAI,SAACoD,EAAGzG,GACxB,OACE,2BAAOsD,IAAKtD,EAAG9E,EAAG,EAAGwL,GAAG,SACrBD,QAXJ,uBAAG5M,GAAG,cAAciH,MAAOkF,IChBvB,SAASW,EAAT,GAMX,IALFzL,EAKC,EALDA,EACAC,EAIC,EAJDA,EACA4K,EAGC,EAHDA,KACAa,EAEC,EAFDA,WACAC,EACC,EADDA,aACC,EACuBpC,mBAAS,GADhC,mBACI1E,EADJ,KACW+G,EADX,OAEmCrC,mBAAS,IAF5C,mBAEIsC,EAFJ,KAEiBC,EAFjB,OAGyCvC,oBAAS,GAHlD,mBAGIwC,EAHJ,KAGoBC,EAHpB,KAIGlM,EAAQ,GAmBZ,OAjBA2J,qBAAU,WACRpE,YAAW,WACT2G,GAAkB,KACjBN,KACF,CAACA,IChBS,SAAqBO,EAAUnM,GAC5C,IAAMoM,EAAgBC,mBAGtB1C,qBAAU,WACRyC,EAAcE,QAAUH,IACvB,CAACA,IAGJxC,qBAAU,WAIR,GAAI3J,EAAO,CACT,IAAInB,EAAK0N,aAJX,WACEH,EAAcE,YAGatM,GAC3B,OAAO,kBAAMwM,cAAc3N,OAE5B,CAACmB,IDCJyM,EAAY,WACNR,IACFH,EAAS/G,EAAQ,GACjBiH,EAAejB,EAAK2B,MAAM,EAAG3H,IACzBA,EAAQgG,EAAK4B,SACf3M,EAAQ,KACR6L,QAGH7L,GAEE+K,EAYH,uBAAGlM,GAAG,wBAAwBsM,UAAS,oBAAejL,EAAf,YAAoBC,EAApB,MACrC,0BAAMD,EAAGA,EAAGC,EAAGA,GACZ4L,EAAYP,MAAM,MAAMnD,KAAI,SAACoD,EAAGzG,GAC/B,OACE,2BAAOsD,IAAKtD,EAAG9E,EAAG,EAAGwL,GAAG,SACrBD,QAhBJ,uBAAGN,UAAS,oBAAejL,EAAf,YAAoBC,EAApB,OE9BR,SAASyM,IACtB,OACE,uBAAGxD,UAAU,UAAU+B,UAAU,qCAC/B,uBAAGA,UAAU,kBACX,0BAAM0B,EAAE,o4B,MCDD,SAASC,IACtB,OACE,uBAAGjO,GAAG,qBACJ,kBAAC+N,EAAD,OCON,IAAMG,EAAWlP,IAAMmP,MAAK,kBAAM,gCAC5BC,EAAYpP,IAAMmP,MAAK,kBAAM,gCAC7BE,EAAmBrP,IAAMmP,MAAK,kBAAM,gCACpCG,EAAWtP,IAAMmP,MAAK,kBAAM,gCAC5BI,EAAqBvP,IAAMmP,MAAK,kBACpC,gCAEIK,EAAexP,IAAMmP,MAAK,kBAAM,gCAChCM,EAASzP,IAAMmP,MAAK,kBAAM,gCAEjB,SAASO,EAAT,GAA2B,EAAZtP,SAAa,IAAD,MACjBiL,qBAAWtL,KAA3B4P,EADiC,sBAGhBA,EAAatD,YAHG,mBAGjCuD,EAHiC,KAGzBC,EAHyB,KAIlCC,EAAYD,GAASA,EAAMlC,MAAM,KAAK,IAAO,GAEnDhG,SAASC,KAAKC,QAAQkI,YAAcH,EACpCjI,SAASC,KAAKC,QAAQiI,SAAWA,GAAY,GAC7C,IAAM5C,GACJ,UAAAlC,EAAa7J,OAAOyO,UAApB,mBAA8BE,UAA9B,eAAyC5E,OACzCF,EAAa7J,OAAOyO,GAAQ1E,KAE9B,OACE,yBAAKlK,GAAG,MAAMgP,QAAQ,eAAeC,MAAM,8BACzC,kBAACvD,EAAD,MACCiD,EAAaO,QAAQ,sBAAwB,kBAAC,EAAD,MAC7CP,EAAaO,QAAQ,kBACpB,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAACjB,EAAD,OAGHS,EAAaO,QAAQ,mBACpB,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAACf,EAAD,OAGHO,EAAaO,QAAQ,gBACpB,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAACd,EAAD,OAGHM,EAAaO,QAAQ,gBACpB,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAACb,EAAD,OAGHK,EAAaO,QAAQ,uBACpB,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAACZ,EAAD,OAGHI,EAAaO,QAAQ,sBACpB,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAACX,EAAD,OAGHG,EAAaO,QAAQ,gBACpB,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAACV,EAAD,QAIFE,EAAatJ,QAAQoC,YAAYC,YACjC,kBAACuE,EAAD,CACE5K,EAAGsN,EAAatJ,QAAQoC,YAAYpG,EACpCC,EAAGqN,EAAatJ,QAAQoC,YAAYnG,EACpC4K,KAAMA,IAGTyC,EAAatJ,QAAQoC,YAAYC,YAChC,kBAACoF,EAAD,CACEzL,EAAGsN,EAAatJ,QAAQoC,YAAYpG,EACpCC,EAAGqN,EAAatJ,QAAQoC,YAAYnG,EACpC4K,KAAMA,EACNxE,WAAYiH,EAAatJ,QAAQoC,YAAYC,WAC7CqF,WAAY,IACZC,aAAc,SAAChC,QCzFV,SAASoE,IAAY,IAAD,EACDxE,oBAAS,GADR,mBAC1ByE,EAD0B,KAChBC,EADgB,KAUjC,OACE,2BAAO/E,UAAU,UACf,2BAAOzJ,KAAK,WAAWyO,QAASF,EAAUG,SAV9C,SAAsBxE,GACpBsE,EAAYtE,EAAEpK,OAAO2O,SACjBvE,EAAEpK,OAAO2O,QACX5I,SAASC,KAAK6I,UAAUC,IAAI,aAE5B/I,SAASC,KAAK6I,UAAUnI,OAAO,gBAM/B,0BAAMiD,UAAU,kB,YCYPoF,MAff,WACE,IAAMxQ,EAAkByQ,qBAAW9F,GACnC,OACE,yBAAKS,UAAU,OACb,kBAACrL,EAAA,EAAD,CAAiBC,gBAAiBA,GAChC,kBAACuL,EAAD,MACA,kBAACgE,EAAD,MACA,gCACE,kBAACU,EAAD,MADF,wDCPYS,QACW,cAA7BxJ,OAAOyJ,SAASC,UAEe,UAA7B1J,OAAOyJ,SAASC,UAEhB1J,OAAOyJ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFxJ,SAASyJ,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjL,QAAQiL,MAAMA,EAAMC,c","file":"static/js/main.3db08700.chunk.js","sourcesContent":["import React from \"react\";\nconst MachineContext = React.createContext();\n\nconst MachineProvider = ({ machineInstance, children }) => {\n  return (\n    <MachineContext.Provider value={machineInstance}>\n      {children}\n    </MachineContext.Provider>\n  );\n};\nexport { MachineProvider, MachineContext };\n","const topBranchTransitions = {\n  introductionScene: \"introductionScene\",\n  overviewScene: \"overviewScene\",\n  gitignoreScene: \"gitignoreScene\",\n  commitScene: \"commitScene\",\n  branchScene: \"branchScene\",\n  resetCheckoutScene: \"resetCheckoutScene\",\n  workingAloneScene: \"workingAloneScene\",\n  githubScene: \"githubScene\",\n};\nexport default topBranchTransitions;\n","import { send } from \"xstate\";\nimport topBranchTransitions from \"./topBranchTransitions\";\nconst introductionScene = {\n  id: \"introductionScene\",\n  initial: \"whatIsThis\",\n  on: topBranchTransitions,\n  states: {\n    whatIsThis: {\n      on: {\n        next: \"navigation\",\n      },\n    },\n    navigation: {\n      on: {\n        next: \"whatIsGit\",\n        prev: \"whatIsThis\",\n      },\n    },\n    whatIsGit: {\n      on: {\n        next: \"whyGit\",\n        prev: \"navigation\",\n      },\n    },\n    whyGit: {\n      on: {\n        next: \"metaphoresUsed\",\n        prev: \"navigation\",\n      },\n    },\n    metaphoresUsed: {\n      on: {\n        next: \"isItHard\",\n        prev: \"whyGit\",\n      },\n    },\n    isItHard: {\n      on: {\n        next: [\n          {\n            target: \"#overviewScene\",\n            cond: { type: \"hasUnlocked\", scene: \"overviewScene\" },\n          },\n          {\n            actions: [\n              { type: \"fireworks\", msg: \"introduction\" },\n              { type: \"unlockScene\", scene: \"overviewScene\" },\n              send(\"overviewScene\", { delay: 3000 }),\n            ],\n          },\n        ],\n        prev: \"whyGit\",\n      },\n    },\n  },\n};\n\nexport default introductionScene;\n","import { send } from \"xstate\";\nimport topBranchTransitions from \"./topBranchTransitions\";\n\nconst overviewScene = {\n  entry: { type: \"setBox\", x: 100, y: 100 },\n  id: \"overviewScene\",\n  initial: \"first\",\n  on: topBranchTransitions,\n  states: {\n    first: {\n      on: {\n        next: \"drawLocalBox\",\n        prev: \"#introductionScene.isItHard\",\n      },\n    },\n    drawLocalBox: {\n      entry: { type: \"setBox\", x: 100, y: 120 },\n      on: {\n        next: \"drawRemoteBox\",\n        prev: \"first\",\n      },\n    },\n    drawRemoteBox: {\n      entry: { type: \"setBox\", x: 750, y: 120 },\n      on: {\n        next: \"workingArea\",\n        prev: \"drawLocalBox\",\n      },\n    },\n\n    workingArea: {\n      entry: { type: \"setBox\", x: 200, y: 200 },\n      on: {\n        next: \"stagingArea\",\n        prev: \"drawRemoteBox\",\n      },\n    },\n    stagingArea: {\n      entry: { type: \"setBox\", x: 450, y: 200 },\n      on: {\n        next: \"localRepository\",\n        prev: \"workingArea\",\n      },\n    },\n    localRepository: {\n      entry: { type: \"setBox\", x: 130, y: 200 },\n      on: {\n        next: \"remoteRepository\",\n        prev: \"stagingArea\",\n      },\n    },\n    remoteRepository: {\n      entry: { type: \"setBox\", x: 450, y: 200 },\n      on: {\n        next: \"addCommand\",\n        prev: \"localRepository\",\n      },\n    },\n    addCommand: {\n      entry: { type: \"setBox\", x: 200, y: 100 },\n      on: {\n        next: \"addCommandMoveFile1\",\n        prev: \"remoteRepository\",\n      },\n    },\n    addCommandMoveFile1: {\n      on: {\n        next: \"addCommandMoveFile2and3\",\n        prev: \"addCommand\",\n      },\n    },\n\n    addCommandMoveFile2and3: {\n      on: {\n        next: \"addCommandMoveFile3Back\",\n        prev: \"addCommandMoveFile1\",\n      },\n    },\n    addCommandMoveFile3Back: {\n      on: {\n        next: \"commitCommand\",\n        prev: \"addCommandMoveFile2and3\",\n      },\n    },\n    commitCommand: {\n      entry: { type: \"setBox\", x: 450, y: 100 },\n      on: {\n        next: \"resetCommand\",\n        prev: \"addCommandMoveFile3Back\",\n      },\n    },\n    resetCommand: {\n      entry: { type: \"setBox\", x: 150, y: 200 },\n      on: {\n        next: \"pushCommand\",\n        prev: \"commitCommand\",\n      },\n    },\n    pushCommand: {\n      entry: { type: \"setBox\", x: 650, y: 100 },\n      on: {\n        next: \"pullCommand\",\n        prev: \"commitCommand\",\n      },\n    },\n    pullCommand: {\n      entry: { type: \"setBox\", x: 450, y: 200 },\n      on: {\n        next: \"takeAScreenshot\",\n        prev: \"pushCommand\",\n      },\n    },\n    takeAScreenshot: {\n      entry: { type: \"setBox\", x: 300, y: 300 },\n      on: {\n        next: [\n          {\n            target: \"#gitignoreScene\",\n            cond: { type: \"hasUnlocked\", scene: \"gitignoreScene\" },\n          },\n          {\n            actions: [\n              { type: \"fireworks\", msg: \"Overview\" },\n              { type: \"unlockScene\", scene: \"gitignoreScene\" },\n              send(\"gitignoreScene\", { delay: 3000 }),\n            ],\n          },\n        ],\n        prev: \"pullCommand\",\n      },\n    },\n  },\n};\nexport default overviewScene;\n","import { send } from \"xstate\";\nimport topBranchTransitions from \"./topBranchTransitions\";\nconst gitignoreScene = {\n  initial: \"opening\",\n  id: \"gitignoreScene\",\n  on: topBranchTransitions,\n  states: {\n    opening: {\n      always: \"gitIgnoreSceneSet\",\n    },\n    gitIgnoreSceneSet: {\n      entry: { type: \"setBox\", x: 200, y: 0 },\n      on: {\n        next: \"gitIgnoreSceneSet2\",\n        prev: \"#overviewScene.pullCommand\",\n      },\n    },\n    gitIgnoreSceneSet2: {\n      entry: { type: \"setBox\", x: 200, y: 0 },\n      on: {\n        next: \"gitIgnoreFile\",\n        prev: \"gitIgnoreSceneSet\",\n      },\n    },\n    gitIgnoreFile: {\n      entry: [{ type: \"setBox\", x: 435, y: 50 }, \"toggleTypewriter\"],\n      on: {\n        next: \"gitIgnoreFileMovedBack\",\n        prev: \"gitIgnoreSceneSet2\",\n      },\n      exit: \"toggleTypewriter\",\n    },\n    gitIgnoreFileMovedBack: {\n      entry: { type: \"setBox\", x: 200, y: 0 },\n      on: {\n        next: [\n          {\n            target: \"#commitScene\",\n            cond: { type: \"hasUnlocked\", scene: \"commitScene\" },\n          },\n          {\n            actions: [\n              { type: \"fireworks\", msg: \".gitignore\" },\n              { type: \"unlockScene\", scene: \"commitScene\" },\n              send(\"commitScene\", { delay: 3000 }),\n            ],\n          },\n        ],\n\n        prev: \"gitIgnoreFile\",\n      },\n    },\n  },\n};\nexport default gitignoreScene;\n","import { send } from \"xstate\";\nimport topBranchTransitions from \"./topBranchTransitions\";\n\nconst commitScene = {\n  //TODO: show that it's the local repo\n  id: \"commitScene\",\n  initial: \"opening\",\n  on: topBranchTransitions,\n  states: {\n    opening: {\n      entry: [\"resetCount\"],\n      always: \"beforeCommits\",\n    },\n    beforeCommits: {\n      entry: { type: \"setBox\", x: 50, y: 100 },\n      on: {\n        next: {\n          target: \"commits1\",\n          actions: \"countUp\",\n        },\n        prev: {\n          target: \"#gitignoreScene.gitIgnoreFileMovedBack\",\n          actions: \"countDown\",\n        },\n      },\n    },\n    commits1: {\n      entry: { type: \"setBox\", x: 50, y: 180 },\n      on: {\n        next: {\n          target: \"commits2\",\n          actions: \"countUp\",\n        },\n        prev: {\n          target: \"beforeCommits\",\n          actions: \"countDown\",\n        },\n      },\n    },\n    commits2: {\n      on: {\n        next: {\n          target: \"commits3\",\n          actions: \"countUp\",\n        },\n        prev: {\n          target: \"commits1\",\n          actions: \"countDown\",\n        },\n      },\n    },\n    commits3: {\n      on: {\n        next: {\n          target: \"commits4\",\n          actions: \"countUp\",\n        },\n        prev: {\n          target: \"commits2\",\n          actions: \"countDown\",\n        },\n      },\n    },\n    commits4: {\n      on: {\n        next: {\n          target: \"commits5\",\n          actions: \"countUp\",\n        },\n        prev: {\n          target: \"commits3\",\n          actions: \"countDown\",\n        },\n      },\n    },\n    commits5: {\n      entry: { type: \"setBox\", x: 50, y: 180 },\n      on: {\n        next: {\n          target: \"commits6\",\n          actions: \"countUp\",\n        },\n        prev: {\n          target: \"commits4\",\n          actions: \"countDown\",\n        },\n      },\n    },\n    commits6: {\n      entry: { type: \"setBox\", x: 300, y: 120 },\n      on: {\n        next: {\n          target: \"commits7\",\n          actions: \"countUp\",\n        },\n        prev: {\n          target: \"commits5\",\n          actions: \"countDown\",\n        },\n      },\n    },\n    commits7: {\n      on: {\n        next: [\n          {\n            target: \"#branchScene\",\n            cond: { type: \"hasUnlocked\", scene: \"branchScene\" },\n          },\n          {\n            actions: [\n              { type: \"fireworks\", msg: \"Commits\" },\n              { type: \"unlockScene\", scene: \"branchScene\" },\n              send(\"branchScene\", { delay: 3000 }),\n            ],\n          },\n        ],\n\n        prev: {\n          target: \"commits6\",\n          actions: \"countDown\",\n        },\n      },\n    },\n  },\n};\nexport default commitScene;\n","import { send } from \"xstate\";\nimport topBranchTransitions from \"./topBranchTransitions\";\nconst branchScene = {\n  id: \"branchScene\",\n  initial: \"opening\",\n  on: topBranchTransitions,\n  states: {\n    opening: {\n      entry: [\"resetBranchOverlay\", { type: \"setBox\", x: 100, y: 150 }],\n      on: {\n        next: { target: \"master\", actions: \"incrementBranchOverlay\" },\n        prev: { target: \"#commitScene.commits7\", actions: \"setCountEnd\" },\n      },\n    },\n    master: {\n      entry: [{ type: \"setBox\", x: 300, y: 200 }],\n      on: {\n        next: {\n          target: \"branchToFeature1\",\n          actions: \"incrementBranchOverlay\",\n        },\n        prev: { target: \"opening\", actions: \"decrementBranchOverlay\" },\n      },\n    },\n    branchToFeature1: {\n      entry: [{ type: \"setBox\", x: 300, y: 200 }],\n      on: {\n        next: { target: \"feature1\", actions: \"incrementBranchOverlay\" },\n        prev: { target: \"master\", actions: \"decrementBranchOverlay\" },\n      },\n    },\n    feature1: {\n      entry: [{ type: \"setBox\", x: 400, y: 200 }],\n      on: {\n        next: {\n          target: \"feature1MergeToMaster\",\n          actions: \"incrementBranchOverlay\",\n        },\n        prev: {\n          target: \"branchToFeature1\",\n          actions: \"decrementBranchOverlay\",\n        },\n      },\n    },\n    feature1MergeToMaster: {\n      entry: [{ type: \"setBox\", x: 100, y: 350 }],\n      on: {\n        next: {\n          target: \"branchToFeature2Cards\",\n          actions: \"incrementBranchOverlay\",\n        },\n        prev: {\n          target: \"feature1\",\n          actions: \"decrementBranchOverlay\",\n        },\n      },\n    },\n    branchToFeature2Cards: {\n      on: {\n        next: {\n          target: \"feature2Cards\",\n          actions: \"incrementBranchOverlay\",\n        },\n        prev: {\n          target: \"feature1MergeToMaster\",\n          actions: \"decrementBranchOverlay\",\n        },\n      },\n    },\n    feature2Cards: {\n      on: {\n        next: {\n          target: \"feature2MergeToMaster\",\n          actions: \"incrementBranchOverlay\",\n        },\n        prev: {\n          target: \"branchToFeature2Cards\",\n          actions: \"decrementBranchOverlay\",\n        },\n      },\n    },\n    feature2MergeToMaster: {\n      on: {\n        next: {\n          target: \"branchToNav\",\n          actions: \"incrementBranchOverlay\",\n        },\n        prev: {\n          target: \"feature2Cards\",\n          actions: \"decrementBranchOverlay\",\n        },\n      },\n    },\n    branchToNav: {\n      on: {\n        next: {\n          target: \"developmentComplete\",\n          actions: \"incrementBranchOverlay\",\n        },\n        prev: {\n          target: \"feature2MergeToMaster\",\n          actions: \"decrementBranchOverlay\",\n        },\n      },\n    },\n    developmentComplete: {\n      //TODO: fireworks etc\n      on: {\n        next: [\n          {\n            target: \"#resetCheckoutScene\",\n            cond: { type: \"hasUnlocked\", scene: \"resetCheckoutScene\" },\n          },\n          {\n            actions: [\n              { type: \"fireworks\", msg: \"Branches\" },\n              { type: \"unlockScene\", scene: \"resetCheckoutScene\" },\n              send(\"resetCheckoutScene\", { delay: 3000 }),\n            ],\n          },\n        ],\n        prev: {\n          target: \"branchToNav\",\n          actions: \"decrementBranchOverlay\",\n        },\n      },\n    },\n  },\n};\nexport default branchScene;\n","import { send } from \"xstate\";\nimport topBranchTransitions from \"./topBranchTransitions\";\nconst resetCheckoutScene = {\n  id: \"resetCheckoutScene\",\n  initial: \"opening\",\n  on: topBranchTransitions,\n  states: {\n    opening: {\n      entry: [{ type: \"setBox\", x: 100, y: 120 }],\n      on: {\n        next: \"spreadOut\",\n        prev: {\n          target: \"#branchScene.developmentComplete\",\n          actions: [\"setBranchOverlayEnd\"],\n        },\n      },\n    },\n    spreadOut: {\n      entry: [{ type: \"setBox\", x: 100, y: 120 }],\n      on: {\n        next: \"filesAddedToProject\",\n        prev: \"opening\",\n      },\n    },\n    filesAddedToProject: {\n      entry: [{ type: \"setBox\", x: 250, y: 120 }],\n      on: {\n        next: \"firstAddCommand\",\n        prev: \"spreadOut\",\n      },\n    },\n    firstAddCommand: {\n      entry: [{ type: \"setBox\", x: 600, y: 120 }],\n      on: { next: \"firstCommitCommand\", prev: \"filesAddedToProject\" },\n    },\n    firstCommitCommand: {\n      entry: [\n        { type: \"setCssFileStep\", value: 0 },\n        { type: \"setBox\", x: 600, y: 120 },\n      ],\n      on: { next: \"firstChangeToFiles\", prev: \"firstAddCommand\" },\n    },\n    firstChangeToFiles: {\n      entry: [\n        { type: \"setCssFileStep\", value: 1 },\n        { type: \"setBox\", x: 200, y: 120 },\n      ],\n      on: {\n        next: \"secondAddCommand\",\n        prev: \"firstCommitCommand\",\n      },\n    },\n    secondAddCommand: {\n      entry: { type: \"setBox\", x: 600, y: 220 },\n      on: {\n        next: \"secondCommitCommand\",\n        prev: \"firstChangeToFiles\",\n      },\n    },\n    secondCommitCommand: {\n      entry: { type: \"setBox\", x: 600, y: 220 },\n      on: {\n        next: \"resetIntro\",\n        prev: \"secondAddCommand\",\n      },\n    },\n    resetIntro: {\n      entry: { type: \"setBox\", x: 200, y: 120 },\n      on: { next: \"reset\", prev: \"secondCommitCommand\" },\n    },\n    reset: {\n      entry: { type: \"setCssFileStep\", value: 0 },\n      on: { next: \"restored\", prev: \"resetIntro\" },\n    },\n    restored: {\n      entry: { type: \"setCssFileStep\", value: 1 },\n      on: {\n        next: \"checkout\",\n        prev: \"reset\",\n      },\n    },\n    checkout: {\n      entry: { type: \"setCssFileStep\", value: 0 },\n      on: {\n        next: \"ending\",\n        prev: \"restored\",\n      },\n    },\n    ending: {\n      on: {\n        next: [\n          {\n            target: \"#workingAloneScene\",\n            cond: { type: \"hasUnlocked\", scene: \"workingAloneScene\" },\n          },\n          {\n            actions: [\n              { type: \"fireworks\", msg: \"Reset/Checkout\" },\n              { type: \"unlockScene\", scene: \"workingAloneScene\" },\n              send(\"workingAloneScene\", { delay: 3000 }),\n            ],\n          },\n        ],\n        prev: {\n          target: \"checkout\",\n        },\n      },\n    },\n  },\n};\nexport default resetCheckoutScene;\n","import { send } from \"xstate\";\nimport topBranchTransitions from \"./topBranchTransitions\";\nconst workingAloneScene = {\n  id: \"workingAloneScene\",\n  initial: \"opening\",\n  on: topBranchTransitions,\n  states: {\n    opening: {\n      entry: [{ type: \"setBox\", x: 100, y: 120 }, \"resetWorkingAloneCount\"],\n      on: {\n        next: { target: \"countLoop\", actions: \"incrementWorkingAloneCount\" },\n        prev: {\n          target: \"#resetCheckoutScene.ending\",\n          actions: [\"setBranchOverlayEnd\"],\n        },\n      },\n    },\n    countLoop: {\n      entry: { type: \"setBox\", x: 100, y: 40 },\n      meta: {\n        texts: [\n          \"Start each day by pulling master\",\n          \"Find a feature to work on\",\n          \"and create a branch for that\",\n          \"try to do one feature per branch\",\n          \"commit and push often\",\n          \"... every time something is working\",\n          \"write meaningfull commit messages\",\n          \"once you're done with your feature, push it\",\n          \"then merge into master\",\n          \"repeat the process\",\n        ],\n      },\n      on: {\n        next: [\n          {\n            target: \"countLoop\",\n            actions: \"incrementWorkingAloneCount\",\n            cond: \"hasMoreTexts\",\n          },\n          { target: \"ending\" },\n        ],\n        prev: [\n          {\n            target: \"countLoop\",\n            actions: \"decrementWorkingAloneCount\",\n            cond: { type: \"greaterThanZero\", prop: \"workingAloneCount\" },\n          },\n          { target: \"opening\" },\n        ],\n      },\n    },\n    ending: {\n      entry: { type: \"setBox\", x: 100, y: 40 },\n      on: {\n        next: [\n          {\n            target: \"#githubScene\",\n            cond: { type: \"hasUnlocked\", scene: \"githubScene\" },\n          },\n          {\n            actions: [\n              { type: \"fireworks\", msg: \"Working Alone\" },\n              { type: \"unlockScene\", scene: \"githubScene\" },\n              send(\"githubScene\", { delay: 3000 }),\n            ],\n          },\n        ],\n        prev: \"countLoop\",\n      },\n    },\n  },\n};\nexport default workingAloneScene;\n","import { send } from \"xstate\";\nimport topBranchTransitions from \"./topBranchTransitions\";\nconst githubScene = {\n  id: \"githubScene\",\n  initial: \"opening\",\n  on: topBranchTransitions,\n  states: {\n    opening: {\n      entry: [{ type: \"setBox\", x: 100, y: 120 }],\n      on: {\n        next: { target: \"github\" },\n        prev: {\n          target: \"#workingAloneScene.ending\",\n          actions: [],\n        },\n      },\n    },\n    github: {\n      on: {\n        next: \"pushing\",\n        prev: \"opening\",\n      },\n    },\n    pushing: {\n      on: {\n        next: \"pulling\",\n        prev: \"github\",\n      },\n    },\n    pulling: {\n      on: {\n        next: \"cloning\",\n        prev: \"pushing\",\n      },\n    },\n    cloning: {\n      on: {\n        next: \"\",\n        prev: \"pulling\",\n      },\n    },\n    ending: {\n      entry: { type: \"setBox\", x: 100, y: 40 },\n      on: {\n        next: [\n          {\n            target: \"\",\n            cond: { type: \"hasUnlocked\", scene: \"workingAloneScene\" },\n          },\n          {\n            actions: [\n              { type: \"fireworks\", msg: \"Working Alone\" },\n              { type: \"unlockScene\", scene: \"\" },\n              send(\"\", { delay: 3000 }),\n            ],\n          },\n        ],\n        prev: \"\",\n      },\n    },\n  },\n};\nexport default githubScene;\n","const guards = {\n  hasUnlocked: (context, event, { cond }) => {\n    return context.unlocks[cond.scene];\n  },\n  greaterThanZero: (ctx, evt, { cond }) => {\n    console.log(ctx[cond.prop]);\n    return ctx[cond.prop] > 0;\n  },\n  hasMoreTexts: (ctx, evt) => {\n    return ctx.workingAloneCount < 9;\n  },\n};\n\nexport default guards;\n","import { assign } from \"xstate\";\nimport fx from \"fireworks\";\nimport { unlockStorage } from \"../config\";\nconst actions = {\n  fireworks: (ctx, evt, { action }) => {\n    function fireOff(count = 6) {\n      for (let i = 0; i < count; i++) {\n        fx({\n          x: window.innerWidth / 2 + Math.random() * 200 - 100,\n          y: window.innerHeight / 2 + Math.random() * 200 - 100,\n        });\n      }\n    }\n    fireOff();\n    setTimeout(fireOff, 1000);\n    setTimeout(fireOff, 2000);\n    document.body.dataset.fireworks = \"true\";\n    const h1 = document.createElement(\"h1\");\n    h1.textContent = `Congratulations, you've completed the ${action.msg} scene`;\n    h1.style.position = \"absolute\";\n    h1.style.textAlign = \"center\";\n    h1.style.top = \"45vh\";\n    document.body.appendChild(h1);\n    setTimeout(() => {\n      h1.remove();\n      document.body.dataset.fireworks = \"false\";\n    }, 3000);\n  },\n  toggleTypewriter: assign({\n    description: (ctx, evt) => {\n      const description = { ...ctx.description };\n      description.typewriter = !description.typewriter;\n      return description;\n    },\n  }),\n  setBox: assign({\n    description: (ctx, evt, { action }) => {\n      const description = { ...ctx.description };\n      description.x = action.x;\n      description.y = action.y;\n      return description;\n    },\n  }),\n  setCountEnd: assign({\n    commitListStep: (ctx, evt) => {\n      return 6;\n    },\n  }),\n  countUp: assign({\n    commitListStep: (ctx, evt) => {\n      return ctx.commitListStep + 1;\n    },\n  }),\n  countDown: assign({\n    commitListStep: (ctx, evt) => {\n      return ctx.commitListStep - 1;\n    },\n  }),\n  resetCount: assign({\n    commitListStep: (ctx, evt) => {\n      return -1;\n    },\n  }),\n  resetBranchOverlay: assign({\n    branchOverlayStep: (ctx, evt) => {\n      return 0;\n    },\n  }),\n  setBranchOverlayEnd: assign({\n    branchOverlayStep: (ctx, evt) => {\n      return 9;\n    },\n  }),\n  incrementBranchOverlay: assign({\n    branchOverlayStep: (ctx, evt) => {\n      return ctx.branchOverlayStep + 1;\n    },\n  }),\n  decrementBranchOverlay: assign({\n    branchOverlayStep: (ctx, evt) => {\n      return ctx.branchOverlayStep - 1;\n    },\n  }),\n  setBranchOverlay: assign({\n    branchOverlayStep: (ctx, evt, { action }) => {\n      return action.x;\n    },\n  }),\n  setCssFileStep: assign({\n    cssFileStep: (ctx, evt, { action }) => action.value,\n  }),\n  resetWorkingAloneCount: assign({\n    workingAloneCount: (ctx, evt) => {\n      return -1;\n    },\n  }),\n  incrementWorkingAloneCount: assign({\n    workingAloneCount: (ctx, evt) => {\n      return ctx.workingAloneCount + 1;\n    },\n  }),\n  decrementWorkingAloneCount: assign({\n    workingAloneCount: (ctx, evt) => {\n      return ctx.workingAloneCount - 1;\n    },\n  }),\n  unlockScene: assign({\n    unlocks: (ctx, evt, { action }) => {\n      const unlocks = { ...ctx.unlocks };\n      unlocks[action.scene] = true;\n      let storage = JSON.parse(localStorage.getItem(unlockStorage));\n      storage[action.scene] = true;\n      localStorage.setItem(unlockStorage, JSON.stringify(storage));\n      return unlocks;\n    },\n  }),\n};\nexport default actions;\n","export const initialState = \"introductionScene\";\nexport const unlockStorage = \"gitUnlock\";\n","import { Machine } from \"xstate\"; //, send\n\nimport introductionScene from \"./scenes/introductionScene\";\nimport overviewScene from \"./scenes/overviewScene\";\nimport gitignoreScene from \"./scenes/gitignoreScene\";\nimport commitScene from \"./scenes/commitScene\";\nimport branchScene from \"./scenes/branchScene\";\nimport resetCheckoutScene from \"./scenes/resetCheckoutScene\";\nimport workingAloneScene from \"./scenes/workingAloneScene\";\nimport githubScene from \"./scenes/githubScene\";\n\nimport guards from \"./parts/guards\";\nimport actions from \"./parts/actions\";\n\nimport { initialState, unlockStorage } from \"./config\";\n\n//still needs to be added to topbranchtransitions and Levels.js and SVG.js\nconst scenes = {\n  introductionScene,\n  overviewScene,\n  gitignoreScene,\n  commitScene,\n  branchScene,\n  resetCheckoutScene,\n  workingAloneScene,\n  githubScene,\n};\nconst initialUnlocks = { ...scenes };\n\nlet storage = JSON.parse(localStorage.getItem(unlockStorage));\n\nObject.keys(initialUnlocks).map(function (key, index) {\n  initialUnlocks[key] = storage?.[key] || false;\n  return \"\";\n});\ninitialUnlocks.introductionScene = true;\n//TODO: when switching scenes the text is misplaced, add initial setBox to all scenes\n//TODO: maybe descriptions should be in meta?\n//https://xstate.js.org/docs/guides/states.html#state-meta-data\n\n//if (!storage) {\nlocalStorage.setItem(\n  unlockStorage,\n  JSON.stringify({\n    ...initialUnlocks,\n  })\n);\n//}\n\nstorage = JSON.parse(localStorage.getItem(unlockStorage));\nconst machine = {\n  id: \"gitMachine\",\n  strict: true,\n  initial: initialState,\n  context: {\n    description: {\n      x: 100,\n      y: 100,\n      typewriter: false,\n    },\n    unlocks: {\n      ...initialUnlocks,\n    },\n    commitListStep: -1,\n    branchOverlayStep: 0,\n    cssFileStep: 0,\n    htmlFileStep: 0,\n    workingAloneCount: -1,\n  },\n  states: {\n    ...scenes,\n  },\n};\nconst flowMachine = Machine(machine, {\n  guards,\n  actions,\n});\n\nexport default flowMachine;\nexport { machine };\n","import { initialState } from \"./config\";\nconst descriptions = {\n  initial: initialState,\n  states: {\n    introductionScene: {\n      name: \"Introduction\",\n      whatIsThis: {\n        desc: `Welcome to Gitfographic<3\n        \n        This little project is meant to help you get up and running in the crazy world of Git.\n        \n        It is not meant to teach you how to actually do all the Git stuff, but rather:\n        - give you an introduction to what it is,\n        - why we use it\n        - a vocabulary to make learning it easier\n \n        Find the next button, and click it\n \n        Btw, for now, Safari is a total NO-GO...\n        `,\n      },\n      navigation: {\n        desc: `Well done, you found it, did you click the up-arrow as well?\n        \n        That one gives you an overview of the \"levels\" you've completed.\n        \n        You can always jump between completed levels.\n        \n        Please read all the texts carefully, I've spent a lot of time making them short and to the point\n \n        Instead of clicking, you can use the arrow keys\n\n        Try it`,\n      },\n      whatIsGit: {\n        desc: `What is Git?\n        \n        Git is what is called a \"version control system\"\n        \n        In English that means: A system to track changes in documents.\n        \n        In our case, that means HTML / CSS / JS etc\n        \n        `,\n      },\n      whyGit: {\n        desc: `Git and why bother.\n        \n        \"I don't need that\" is a common objection to Git, \"I can just copy my folder\" is another.\n\n        And that is true, but soon that's going to be a real mess. \n        So let's take a look at the major selling points for Git:\n \n  - Git gives you \"incremental backups\", meaning you can make a \"save game\" when you feel like it\n - You can always go back to a \"save game\" later\n - Did you mess something up? Just go back\n - You can make different versions so you can try out ideas safely\n - You can collaborate with others WITHOUT overwriting each others work\n - With a push on a button, all your work is backed up on a service called GitHub.com\"\n        `,\n      },\n      metaphoresUsed: {\n        desc: `I'll be using a few metaphores here and there.\n        \n        Save Games: Those are the points in time you can go back to. Technically, they are called commits.\n        \n        Timelines: Those are the different versions of your site/program etc. It's a series of those save games.`,\n      },\n      isItHard: {\n        desc: `Is Git hard?\n        \n        Well, here's a quote I found somewhere:\n        \n        Git is \"Made by geeks, for geeks\"\n        \n        And that is the sad truth.\n        \n        BUT. It's just a matter of memorizing a few new workflows. \n\n        So if you can do that and you can be consistent in using those,\n        \n        Then the advantages outweigh the disadvantages.... a lot.\n        \n        Have fun, and ask when you're stuck\n         - Jonas`,\n      },\n    },\n    overviewScene: {\n      name: \"Overview\",\n      first: {\n        desc: `From a top view, git is just\n        moving stuff between four boxes`,\n      },\n      drawLocalBox: {\n        desc: `Boxes on our own computer`,\n      },\n      drawRemoteBox: {\n        desc: `and a box up in the cloud.\nUsually GitHub`,\n      },\n      workingArea: {\n        desc: `The folder where we have our development files\n        is called the \"working area\"`,\n      },\n      stagingArea: {\n        desc: `The staging area is a temporary \"folder\"\n            Where you gather the files \n            you would like to store in the next \"save game\" / commit.\n            \n            We'll get back to what a commit is shortly`,\n      },\n      localRepository: {\n        desc: `The Local Repository, or local repo,\n      is where all your local \n      commits, branches etc are stored.\n    This is where your \"save games\" are located.\n    \n    And a branch? We'll get back to that`,\n      },\n      remoteRepository: {\n        desc: `This is your online backup,\n        it's a copy of your local repository.\n        This is also where team members\n        gets your code`,\n      },\n      addCommand: {\n        desc: `Files are marked to be staged using the \"add\" command`,\n      },\n      addCommandMoveFile1: {\n        desc: `You can mark individual files`,\n      },\n      addCommandMoveFile2and3: {\n        desc: `or multiple`,\n      },\n      addCommandMoveFile3Back: {\n        desc: `If you are not satisfied with your choices\n        you can \"unstage\" a file again`,\n      },\n      commitCommand: {\n        desc: `When you have staged all the files you need to\n        You can make a \"save game\" containing\n        - all your previous code\n        - everything you've staged\n        Once commited, the staged files becomes \"unstaged\"`,\n      },\n      resetCommand: {\n        desc: `If you ever mess up, or if you're feeling curious.\n        \n        You can \"load a previous save game\" by issuing the \"reset\" command`,\n      },\n      pushCommand: {\n        desc: `To back up your work,\n        or share it with your team,\n        use the \"push\" command to put \n        everything online.\n        Usually on GitHub.\n        Now it's available for your team.\n        AND you have a copy online`,\n      },\n      pullCommand: {\n        desc: `To get back your code (when you've messed up \n        or when a team mate has pushed something you need),\n        issue a \"pull\" command`,\n      },\n      takeAScreenshot: {\n        desc: `NOW would be a good time to take a screenshot or some notes :-)`,\n      },\n    },\n    gitignoreScene: {\n      name: \".gitignore\",\n      gitIgnoreSceneSet: {\n        desc: `Let's explore our working copy a bit more\n        It's the files as they are on our computer.\n        \n        All files you add to the folder is waiting to be either \n        - tracked\n        - excluded from tracking`,\n      },\n      gitIgnoreSceneSet2: {\n        desc: `Tracking was done by \"adding\" the file. Thereby telling git to keep track of it.\n          Excluding a file is done by\n          - not adding it (which is error prone, I have added files by accident countless times)\n          - or writing the file name in a special file called \".gitignore\"\n          Let's take a look at this file`,\n      },\n      gitIgnoreFile: {\n        desc: `#in this file we list the\n        #files/folders that should\n        # never be tracked, like:\n        notes.txt\n        *.psd\n        wireframes/\n        node_modules/\n        myWeekendPlans.*\n        \n        #once written here, they\n        #can no longer be added \n        #to staging`,\n      },\n      gitIgnoreFileMovedBack: {\n        desc: `In general, add files to .gitignore that are\n          - not needed for the project to run\n          - generated by the code\n          - not needed by other team members`,\n      },\n    },\n    commitScene: {\n      name: \"Commits\",\n      beforeCommits: {\n        desc: `That was the overview. \n        Let's take a look at what happens inside the repository`,\n      },\n      commits1: {\n        desc: `Inside our repository, we have commits.\n          Commits are usually visualized as a circle`,\n      },\n      commits2: {\n        desc: `Everytime we do another commit, we're modifying a timeline`,\n      },\n      commits3: {\n        desc: `After two commits, our timeline looks like this`,\n      },\n      commits4: {\n        desc: `We can keep doing this forever`,\n      },\n      commits5: {\n        desc: `Don't worry, that was the last one.\n          \n          Now for the beautiful part. We can travel in time!`,\n      },\n      commits6: {\n        desc: `Using the reset command, we can go back to any commit we've made.\n          \n          Undoing all changes after that commit!\n          That is why I call them save games. \n          - Save before you enter the boss-fight. \n          - Save before something dangerous`,\n      },\n      commits7: {\n        desc: `ready to dive a bit deeper? Take a break, I'm not going anywhere!`,\n      },\n    },\n    branchScene: {\n      name: \"Branches\",\n      opening: {\n        desc: `Branches allows us to make multiple timelines\n(those things with the commits)\n \n\nThis provides us with a lot of benefits:\n- When working together we can have our own timelines (no overwriting each other)\n- If a timeline fails, we can just go back, ignoring that timeline\n- We can \"merge\" two timelines, combining the work of developer A & B`,\n      },\n      master: {\n        desc: `Our initial branch is called \"main\"\n      (it used to be master, you will see that a lot).\n\n      Main should always contain working code`,\n      },\n      branchToFeature1: {\n        desc: `From the main branch, we can \"branch out\",\nor \"snap a branch\" as it's sometimes called.\n\nThe new branch is identical to the main branch at that point in time (commit)`,\n      },\n      feature1: {\n        desc: `We now have two separate timelines.\n        Main, that holds our working code.\n        And feature1.`,\n      },\n      feature1MergeToMaster: {\n        desc: `When development is complete on the feature1 branch,\n        we can \"merge\" the code from feature1 into main.\n        \n        Now main and feature1 are identical`,\n      },\n      branchToFeature2Cards: {\n        desc: `Let's add another developer. \n        Each developer makes her own branch.`,\n      },\n      feature2Cards: {\n        desc: `Three timelines!\n        \n        Main is unchanged. \n        And developer A & B can work on their own features, \n        without risking destroying each other's work!\n        \n        Bloody Awesome`,\n      },\n      feature2MergeToMaster: {\n        desc: `Dev A is done, and merges his code into main.\n        \n        Dev B is not done yet, and continues to work on her own branch`,\n      },\n      branchToNav: {\n        desc: `Dev A get's another task and immediately branches out.\n        \n        Dev B, well, her task is a bit bigger`,\n      },\n      developmentComplete: {\n        desc: `The nav branch turns out to be a dead end, \n        and it's never merged into main.\n        \n        In the meantime, developer B finishes her work\n        and merges into main`,\n      },\n    },\n    resetCheckoutScene: {\n      name: \"Reset / Checkout\",\n      opening: {\n        desc: `Let's take a deeper look at how resetting works\n        \n        And then, when we get that, its best friend: checkout`,\n      },\n      spreadOut: {\n        desc: `Remember what the three boxes were?\n        \n        Let's do a little roleplay here`,\n      },\n      filesAddedToProject: {\n        desc: `You have just started a new project and have created a few files`,\n      },\n      firstAddCommand: {\n        desc: `You \"add\" both files, moving them to the staging area.\n        \n        The files in your folder are unchanged!`,\n      },\n      firstCommitCommand: {\n        desc: `You commit the files on master.\n        \n        And your working copy? unchanged`,\n      },\n      firstChangeToFiles: {\n        desc: `Your first commit is done, and you continue working on your project.\n        \n        Changing the CSS`,\n      },\n      secondAddCommand: {\n        desc: `You add the only file that has changed`,\n      },\n      secondCommitCommand: {\n        desc: `You commit your changes, \n        and your timeline now has two commits.\n        \n        Your development files? Well what do you think?\n        \n        (take a look)`,\n      },\n      resetIntro: {\n        desc: `Regretting your radical design changes, you wish to go back\n        And you just happens to remember that the command is called \"reset\".\n        \n        So, click next to reset to the previous commit`,\n      },\n      reset: {\n        desc: `Wow it worked. That Jonas guy must be on to something.\n        \n        You look to your left and see that your files are back to their earlier state.\n        \n        And to your right, you notice that the commit is gone. FOREVER.\n        \n        Reset is a destructive action!!\n        \n        So let's imagine we hadn't reset and learn about another command (next)`,\n      },\n      restored: {\n        desc: `With a long line of commits, it's hard to remember which one to reset to.\n        \n        That's why we have the \"checkout\" command.\n        \n        Checkout changes out working files so we can see what we had at that time.\n        \n        But it does NOT change out timeline (we're going back in time?)`,\n      },\n      checkout: {\n        desc: `See your files and your timeline? \n        The files are reverted, and I've indicated that the timeline is still there \n        by making it opaque`,\n      },\n      ending: {\n        desc: `Being very perceptive, and feeling awefully good about yourself, \n        you realize that the best idea is to\n        1. Use checkout to find the commit you're looking for\n        2. THEN use reset to go back to that point`,\n      },\n    },\n    workingAloneScene: {\n      name: \"Working Alone\",\n      opening: {\n        desc: `When working alone there are a few best practices you should remember`,\n      },\n      countLoop: {\n        desc: `This is my suggested workflow`,\n      },\n      ending: {\n        desc: `How you do it exactly is not the most important thing.\n        \n        And most companies have their own way. \n        \n        But being consistent WILL help you in the long run.\n        \n        As long as you remember to commit and push, your work is saved and can be restored`,\n      },\n    },\n    githubScene: {\n      name: \"GitHub\",\n      opening: {\n        desc: `The remote repository serves (at least) two purposes.\n        - it is our online backup\n        - it is how we share code with our team.\n        \n        Let's take a look at a few words we need to know`,\n      },\n      github: {\n        desc: `GitHub: \n        \n        We have chosen GitHub (github.com) as our remote repository.\n        \n        It is the most widely used, and it's free.\n        \n        I just wanted you to know that alternatives exists`,\n      },\n      pushing: {\n        desc: `Push:\n        \n        Pushing was the act of \"uploading\" our code to the server`,\n      },\n      pulling: {\n        desc: `Pull:\n        \n        Pull was how we downloaded the code again`,\n      },\n      cloning: {\n        desc: `Cloning:\n        \n        That one we havn't covered yet.\n        Cloning means \"take a remote repository and download the files\"\n        \n        The diference between pulling and cloning is subtle.\n        \n        Cloning is something you do once (initially), \n        whereas pulling is done whenever there are changes in the remote`,\n      },\n    },\n  },\n};\nexport default descriptions;\n","import React, { useContext } from \"react\";\n\nimport { MachineContext } from \"../machine/MachineProvider\";\n\nexport default function Levels({ setLevelsOpen }) {\n  const [state, send] = useContext(MachineContext);\n\n  return (\n    <ol className=\"levels\">\n      <li>\n        <button\n          disabled={!state.context.unlocks.introductionScene}\n          onClick={() => {\n            setLevelsOpen(false);\n            send(\"introductionScene\");\n          }}\n        >\n          {state.context.unlocks.introductionScene ? \"Introduction\" : \"Locked\"}\n        </button>\n      </li>\n      <li>\n        <button\n          disabled={!state.context.unlocks.overviewScene}\n          onClick={() => {\n            setLevelsOpen(false);\n            send(\"overviewScene\");\n          }}\n        >\n          {state.context.unlocks.overviewScene ? \"Overview\" : \"Locked\"}\n        </button>\n      </li>\n      <li>\n        <button\n          disabled={!state.context.unlocks.gitignoreScene}\n          onClick={() => {\n            setLevelsOpen(false);\n            send(\"gitignoreScene\");\n          }}\n        >\n          {state.context.unlocks.gitignoreScene ? \".gitignore\" : \"Locked\"}\n        </button>\n      </li>\n      <li>\n        <button\n          disabled={!state.context.unlocks.commitScene}\n          onClick={() => {\n            setLevelsOpen(false);\n            send(\"commitScene\");\n          }}\n        >\n          {state.context.unlocks.commitScene ? \"Commits\" : \"Locked\"}\n        </button>\n      </li>\n      <li>\n        <button\n          disabled={!state.context.unlocks.branchScene}\n          onClick={() => {\n            setLevelsOpen(false);\n            send(\"branchScene\");\n          }}\n        >\n          {state.context.unlocks.branchScene ? \"Branches\" : \"Locked\"}\n        </button>\n      </li>\n      <li>\n        <button\n          disabled={!state.context.unlocks.resetCheckoutScene}\n          onClick={() => {\n            setLevelsOpen(false);\n            send(\"resetCheckoutScene\");\n          }}\n        >\n          {state.context.unlocks.resetCheckoutScene\n            ? \"Reset / Checkout\"\n            : \"Locked\"}\n        </button>\n      </li>\n      <li>\n        <button\n          disabled={!state.context.unlocks.workingAloneScene}\n          onClick={() => {\n            setLevelsOpen(false);\n            send(\"workingAloneScene\");\n          }}\n        >\n          {state.context.unlocks.workingAloneScene ? \"Working Alone\" : \"Locked\"}\n        </button>\n      </li>\n      <li>\n        <button\n          disabled={!state.context.unlocks.githubScene}\n          onClick={() => {\n            setLevelsOpen(false);\n            send(\"githubScene\");\n          }}\n        >\n          {state.context.unlocks.githubScene ? \"GitHub\" : \"Locked\"}\n        </button>\n      </li>\n      <li className=\"close\">\n        <button onClick={() => setLevelsOpen(false)}>X</button>\n      </li>\n    </ol>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  ArrowRightCircle,\n  ArrowLeftCircle,\n  ArrowUpCircle,\n} from \"react-systemuicons\";\n\nimport { MachineContext } from \"../machine/MachineProvider\";\n\nimport descriptions from \"../machine/descriptions\";\nimport Levels from \"./Levels\";\nexport default function Nav(props) {\n  const [state, send] = useContext(MachineContext);\n  const [levelsOpen, setLevelsOpen] = useState(false);\n\n  useEffect(() => {\n    function handleKeyUp(e) {\n      if (\n        !document.body.dataset.fireworks ||\n        document.body.dataset.fireworks === \"false\"\n      ) {\n        if (e.key === \" \" || e.key === \"ArrowRight\") {\n          send(\"next\");\n        } else if (e.key === \"ArrowLeft\") {\n          send(\"prev\");\n        } else if (e.key === \"ArrowUp\") {\n          setLevelsOpen(true);\n        } else if (e.key === \"ArrowDown\") {\n          setLevelsOpen(false);\n        }\n      }\n    }\n    function handleKeyDown(e) {\n      if (e.key === \" \") {\n        e.preventDefault();\n      } else if (e.key === \"ArrowDown\" && levelsOpen) {\n        e.preventDefault();\n      }\n    }\n    window.addEventListener(\"keyup\", handleKeyUp);\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keyup\", handleKeyUp);\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n  const scene = descriptions.states[state.toStrings()[0]].name;\n\n  const classes = (levelsOpen ? \"open\" : \"\") + \" navWrapper\";\n  return (\n    <div className={classes}>\n      <Levels setLevelsOpen={setLevelsOpen} />\n      <nav>\n        <h2>{scene}</h2>\n\n        <button onClick={() => setLevelsOpen(!levelsOpen)}>\n          <ArrowUpCircle className=\"up\" size={50} />\n        </button>\n        <button\n          disabled={!state.nextEvents.includes(\"prev\")}\n          onClick={() => send(\"prev\")}\n        >\n          <ArrowLeftCircle className=\"prev\" size={50} />\n        </button>\n        <button\n          disabled={!state.nextEvents.includes(\"next\")}\n          onClick={() => send(\"next\")}\n        >\n          <ArrowRightCircle className=\"next\" size={50} />\n        </button>\n      </nav>\n    </div>\n  );\n}\n//state.nextEvents\n","import React from \"react\";\n\nexport default function Defs() {\n  return (\n    <defs>\n      <marker\n        id=\"arrowhead\"\n        markerWidth=\"10\"\n        markerHeight=\"7\"\n        refX=\"8\"\n        refY=\"3.5\"\n        orient=\"auto\"\n      >\n        <polygon points=\"0 0, 10 3.5, 0 7\" />\n      </marker>\n    </defs>\n  );\n}\n","import React from \"react\";\n\nimport { useSpring, animated } from \"react-spring\";\n\nexport default function Description({ x, y, text }) {\n  const spring = useSpring({\n    from: {\n      transform: `translate(100px, 100px)`,\n    },\n    to: {\n      transform: `translate(${x}px, ${y}px)`,\n    },\n    config: {\n      duration: 200,\n    },\n  });\n\n  if (!text) {\n    return <g id=\"Description\" style={spring}></g>;\n  }\n  //TODO: same animation on typewriter?\n  //Remember it as animated, but did delete some transition stuff\n  //but now it's not used\n  return (\n    <animated.g id=\"Description\" style={spring}>\n      <text x={0} y={0}>\n        {text.split(\"\\n\").map((t, i) => {\n          return (\n            <tspan key={i} x={0} dy=\"1.2em\">\n              {t}\n            </tspan>\n          );\n        })}\n      </text>\n    </animated.g>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport useInterval from \"../../hooks/useInterval\";\nexport default function TypewriterDescription({\n  x,\n  y,\n  text,\n  startDelay,\n  doneCallback,\n}) {\n  let [count, setCount] = useState(0);\n  let [currentText, setCurrentText] = useState(\"\");\n  let [delayCompleted, setDelayCompleted] = useState(false);\n  let delay = 15;\n\n  useEffect(() => {\n    setTimeout(() => {\n      setDelayCompleted(true);\n    }, startDelay);\n  }, [startDelay]);\n\n  useInterval(() => {\n    if (delayCompleted) {\n      setCount(count + 1);\n      setCurrentText(text.slice(0, count));\n      if (count > text.length) {\n        delay = null;\n        doneCallback();\n      }\n    }\n  }, delay);\n\n  if (!text) {\n    return <g transform={`translate(${x} ${y})`}></g>;\n  }\n  //TODO: use Description as a child component\n  //TODO: spring can animate text\n  /*\n  const props = useSpring({ number: 1, from: { number: 0 } })\nreturn <animated.span>{props.number}</animated.span>\n  */\n  //TODO: noget helt andet, skal lege med den her\n  //https://codesandbox.io/embed/lwpkp46om\n  return (\n    <g id=\"TypewriterDescription\" transform={`translate(${x} ${y})`}>\n      <text x={x} y={y}>\n        {currentText.split(\"\\n\").map((t, i) => {\n          return (\n            <tspan key={i} x={0} dy=\"1.2em\">\n              {t}\n            </tspan>\n          );\n        })}\n      </text>\n    </g>\n  );\n}\n","import { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\n\nexport default function GitLogo() {\n  return (\n    <g className=\"GitLogo\" transform=\"matrix(1.25,0,0,-1.25,0,114.8625)\">\n      <g transform=\"scale(0.1,0.1)\">\n        <path d=\"M 901.547,500.352 500.355,901.527 c -23.093,23.11 -60.566,23.11 -83.691,0 L 333.363,818.211 439.039,712.535 c 24.559,8.293 52.723,2.727 72.293,-16.847 19.688,-19.696 25.207,-48.102 16.699,-72.75 L 629.887,521.094 c 24.648,8.496 53.066,3.004 72.754,-16.711 27.5,-27.492 27.5,-72.059 0,-99.574 -27.52,-27.516 -72.078,-27.516 -99.61,0 -20.683,20.703 -25.801,51.097 -15.312,76.582 l -95,94.992 0,-249.969 c 6.699,-3.32 13.027,-7.742 18.613,-13.312 27.5,-27.497 27.5,-72.059 0,-99.598 -27.5,-27.488 -72.09,-27.488 -99.57,0 -27.5,27.539 -27.5,72.101 0,99.598 6.797,6.789 14.668,11.925 23.066,15.363 l 0,252.281 c -8.398,3.438 -16.25,8.531 -23.066,15.367 -20.828,20.821 -25.84,51.395 -15.157,76.977 L 292.426,777.285 17.3281,502.211 c -23.10544,-23.129 -23.10544,-60.602 0,-83.711 L 418.539,17.3242 c 23.098,-23.10545 60.559,-23.10545 83.691,0 L 901.547,416.641 c 23.117,23.113 23.117,60.605 0,83.711\" />\n      </g>\n    </g>\n  );\n}\n","import React from \"react\";\n\nimport GitLogo from \"../GitLogo\";\nimport \"../../../scss/Introduction.scss\";\n\nexport default function Introduction() {\n  return (\n    <g id=\"sceneIntroduction\">\n      <GitLogo />\n    </g>\n  );\n}\n","import React, { useContext, Suspense } from \"react\";\nimport { MachineContext } from \"../../machine/MachineProvider\";\n\nimport descriptions from \"../../machine/descriptions\";\nimport Defs from \"./Defs\";\nimport Description from \"./Description\";\nimport TypewriterDescription from \"./TypewriterDescription\";\n\nimport Introduction from \"./scenes/Introduction\";\n//import Overview from \"./scenes/Overview\";\n//import Gitignore from \"./scenes/Gitignore\";\n//import CommitsExplained from \"./scenes/CommitsExplained\";\n//import Branches from \"./scenes/Branches\";\n//import ResetCheckoutScene from \"./scenes/ResetCheckoutScene\";\n//import WorkingAlone from \"./scenes/WorkingAlone\";\nconst Overview = React.lazy(() => import(\"./scenes/Overview\"));\nconst Gitignore = React.lazy(() => import(\"./scenes/Gitignore\"));\nconst CommitsExplained = React.lazy(() => import(\"./scenes/CommitsExplained\"));\nconst Branches = React.lazy(() => import(\"./scenes/Branches\"));\nconst ResetCheckoutScene = React.lazy(() =>\n  import(\"./scenes/ResetCheckoutScene\")\n);\nconst WorkingAlone = React.lazy(() => import(\"./scenes/WorkingAlone\"));\nconst Github = React.lazy(() => import(\"./scenes/Github\"));\n\nexport default function SVG({ children }) {\n  const [machineState] = useContext(MachineContext);\n\n  const [parent, child] = machineState.toStrings();\n  const substate = (child && child.split(\".\")[1]) || \"\";\n\n  document.body.dataset.parentstate = parent;\n  document.body.dataset.substate = substate || \"\";\n  const text =\n    descriptions.states[parent]?.[substate]?.desc ||\n    descriptions.states[parent].desc;\n\n  return (\n    <svg id=\"viz\" viewBox=\"0 0 1000 500\" xmlns=\"http://www.w3.org/2000/svg\">\n      <Defs />\n      {machineState.matches(\"introductionScene\") && <Introduction />}\n      {machineState.matches(\"overviewScene\") && (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Overview />\n        </Suspense>\n      )}\n      {machineState.matches(\"gitignoreScene\") && (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Gitignore />\n        </Suspense>\n      )}\n      {machineState.matches(\"commitScene\") && (\n        <Suspense fallback={<div>Loading...</div>}>\n          <CommitsExplained />\n        </Suspense>\n      )}\n      {machineState.matches(\"branchScene\") && (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Branches />\n        </Suspense>\n      )}\n      {machineState.matches(\"resetCheckoutScene\") && (\n        <Suspense fallback={<div>Loading...</div>}>\n          <ResetCheckoutScene />\n        </Suspense>\n      )}\n      {machineState.matches(\"workingAloneScene\") && (\n        <Suspense fallback={<div>Loading...</div>}>\n          <WorkingAlone />\n        </Suspense>\n      )}\n      {machineState.matches(\"githubScene\") && (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Github />\n        </Suspense>\n      )}\n\n      {!machineState.context.description.typewriter && (\n        <Description\n          x={machineState.context.description.x}\n          y={machineState.context.description.y}\n          text={text}\n        />\n      )}\n      {machineState.context.description.typewriter && (\n        <TypewriterDescription\n          x={machineState.context.description.x}\n          y={machineState.context.description.y}\n          text={text}\n          typewriter={machineState.context.description.typewriter}\n          startDelay={2000}\n          doneCallback={(e) => {}}\n        />\n      )}\n    </svg>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function DarkMode() {\n  const [darkMode, setDarkMode] = useState(false);\n  function handleChange(e) {\n    setDarkMode(e.target.checked);\n    if (e.target.checked) {\n      document.body.classList.add(\"dark-mode\");\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n    }\n  }\n  return (\n    <label className=\"switch\">\n      <input type=\"checkbox\" checked={darkMode} onChange={handleChange} />\n      <span className=\"slider round\"></span>\n    </label>\n  );\n}\n","import React from \"react\";\nimport { useMachine } from \"@xstate/react\";\n\nimport { MachineProvider } from \"./machine/MachineProvider\";\nimport flowMachine from \"./machine/stateMachine\";\n\nimport Nav from \"./components/Nav\";\nimport SVG from \"./components/svg/SVG\";\nimport DarkModeSwitch from \"./components/DarkModeSwitch\";\n\nimport \"./App.scss\";\nimport \"./scss/DarkMode.scss\";\nfunction App() {\n  const machineInstance = useMachine(flowMachine);\n  return (\n    <div className=\"App\">\n      <MachineProvider machineInstance={machineInstance}>\n        <Nav />\n        <SVG></SVG>\n        <footer>\n          <DarkModeSwitch /> Dark mode (experimental, stuff might be missing)\n        </footer>\n      </MachineProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}